// Tiernan Lindauer 134003853


CHIP Memory {
    IN  in[16],       // Data to be written into memory
        load,         // Variable which decides whether to write to memory or not
        address[16];  // Address for the register which we want access
    
    OUT out[16];      // Output from the memory

    PARTS:
        Not(in=address[15], out=a15Not);
        And(a=a15Not, b=load, out=ramLoad);
        
        Not(in=address[14], out=a14Not);
        Not(in=address[13], out=a13Not);
        And(a=a13Not, b=a14Not, out=a1314);
        And(a=address[15], b=a1314, out=scrLoad);

        RAM32K(in=in, load=ramLoad, address=address[0..14], out=ramOut);

        Screen(in=in, load=scrLoad, address=address[0..12], out=scrOut);

        Keyboard(out=kbdOut);

        Mux8Way16(a=ramOut, b=ramOut, c=ramOut, d=ramOut, e=scrOut, f=kbdOut, g=kbdOut, h=kbdOut, sel=address[13..15], out=out);
}